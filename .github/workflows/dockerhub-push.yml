name: Build and Push Docker Image

on:
  release:
    types:
      - created
  push:
    branches:
      - main
      - 'build_*'
env:
  DOCKER_REPO: gamerbeaker/splinterlands-statistics


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: ${{ github.event.release.tag_name }}
        run: |
          docker build -t $DOCKER_REPO:$IMAGE_TAG .
          docker push $DOCKER_REPO:$IMAGE_TAG

  build-and-push-latest:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image with Latest Tag
        run: |
          docker build -t $DOCKER_REPO:latest .
          docker push $DOCKER_REPO:latest


  build-and-push-branch:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/build_') && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Temporary Docker Image
        env:
          BRANCH_NAME: ${{ github.ref }}
        run: |
          DOCKER_TAG=$(echo $BRANCH_NAME | sed 's/refs\/heads\/build_//')
          docker build -t $DOCKER_REPO:pre_$DOCKER_TAG .
          docker push $DOCKER_REPO:pre_$DOCKER_TAG
